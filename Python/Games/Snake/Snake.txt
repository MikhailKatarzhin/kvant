import pygame
import random

# Инициализация игры
pygame.init()

# Определение цветов
white = (255, 255, 255)
black = (0, 0, 0)
red = (255, 0, 0)

# Определение размеров окна
width = 600
height = 400

# Создание окна
window = pygame.display.set_mode((width, height))
pygame.display.set_caption('Змейка')

# Определение размеров змейки и яблока
snake_size = 10
apple_size = 10

# Создание начальной позиции змейки
snake_x = width / 2
snake_y = height / 2

# Создание начальной позиции яблока
apple_x = round(random.randrange(0, width - apple_size) / 10.0) * 10.0
apple_y = round(random.randrange(0, height - apple_size) / 10.0) * 10.0

# Определение начального направления змейки
snake_direction = 'right'

# Определение начальной длины змейки
snake_length = 1
snake_body = []

# Функция для отрисовки змейки и яблока
def draw_snake_and_apple(snake_body, apple_x, apple_y):
    window.fill(white)
    for pos in snake_body:
        pygame.draw.rect(window, black, [pos[0], pos[1], snake_size, snake_size])
    pygame.draw.rect(window, red, [apple_x, apple_y, apple_size, apple_size])
    pygame.display.update()

# Главный цикл игры
game_over = False
while not game_over:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            game_over = True

    # Обработка движения змейки
    if snake_direction == 'right':
        snake_x += snake_size
    elif snake_direction == 'left':
        snake_x -= snake_size
    elif snake_direction == 'up':
        snake_y -= snake_size
    elif snake_direction == 'down':
        snake_y += snake_size

    # Создание новой головы змейки
    snake_head = []
    snake_head.append(snake_x)
    snake_head.append(snake_y)
    snake_body.append(snake_head)

    # Удаление хвоста змейки, если её длина стала больше, чем 1
    if len(snake_body) > snake_length:
        del snake_body[0]

    # Проверка, если змейка съела яблоко
    if snake_x == apple_x and snake_y == apple_y:
        apple_x = round(random.randrange(0, width - apple_size) / 10.0) * 10.0
        apple_y = round(random.randrange(0, height - apple_size) / 10.0) * 10.0
        snake_length += 1

    # Проверка на столкновение змейки со стенками
    if snake_x >= width or snake
    
	# вышла за левую границу окна или ударилась о правую
	if snake_x < 0 or snake_x >= width - snake_size:
		game_over = True

	# вышла за верхнюю границу окна или ударилась о нижнюю
	if snake_y < 0 or snake_y >= height - snake_size:
		game_over = True

	# Проверка на столкновение змейки с самой собой
	for block in snake_body[:-1]:
		if block == snake_head:
			game_over = True

	# Обновление экрана
	draw_snake_and_apple(snake_body, apple_x, apple_y)
